/*
 * !!! File autogenerated by convert-email-xml-inputs-to-swift.swift
 * !!! Don’t change manually.
 *
 * EmailValidator+ValidationCodes.swift
 * Email
 *
 * Created by convert-email-xml-inputs-to-swift.swift on 2024-09-19T19:10:21Z.
 */

import Foundation



extension EmailValidator {
	
	public struct ValidationCategory : Hashable, Sendable {
		
		public static let validCategory = ValidationCategory(value: 1, xmlId: String(data: Data(base64Encoded: "SVNFTUFJTF9WQUxJRF9DQVRFR09SWQ==")!, encoding: .utf8)!, description: String(data: Data(base64Encoded: "QWRkcmVzcyBpcyB2YWxpZA==")!, encoding: .utf8)!)
		public static let dnswarn = ValidationCategory(value: 7, xmlId: String(data: Data(base64Encoded: "SVNFTUFJTF9ETlNXQVJO")!, encoding: .utf8)!, description: String(data: Data(base64Encoded: "QWRkcmVzcyBpcyB2YWxpZCBidXQgYSBETlMgY2hlY2sgd2FzIG5vdCBzdWNjZXNzZnVs")!, encoding: .utf8)!)
		public static let rfc5321 = ValidationCategory(value: 15, xmlId: String(data: Data(base64Encoded: "SVNFTUFJTF9SRkM1MzIx")!, encoding: .utf8)!, description: String(data: Data(base64Encoded: "QWRkcmVzcyBpcyB2YWxpZCBmb3IgU01UUCBidXQgaGFzIHVudXN1YWwgZWxlbWVudHM=")!, encoding: .utf8)!)
		public static let cfws = ValidationCategory(value: 31, xmlId: String(data: Data(base64Encoded: "SVNFTUFJTF9DRldT")!, encoding: .utf8)!, description: String(data: Data(base64Encoded: "QWRkcmVzcyBpcyB2YWxpZCB3aXRoaW4gdGhlIG1lc3NhZ2UgYnV0IGNhbm5vdCBiZSB1c2VkIHVubW9kaWZpZWQgZm9yIHRoZSBlbnZlbG9wZQ==")!, encoding: .utf8)!)
		public static let deprec = ValidationCategory(value: 63, xmlId: String(data: Data(base64Encoded: "SVNFTUFJTF9ERVBSRUM=")!, encoding: .utf8)!, description: String(data: Data(base64Encoded: "QWRkcmVzcyBjb250YWlucyBkZXByZWNhdGVkIGVsZW1lbnRzIGJ1dCBtYXkgc3RpbGwgYmUgdmFsaWQgaW4gcmVzdHJpY3RlZCBjb250ZXh0cw==")!, encoding: .utf8)!)
		public static let rfc5322 = ValidationCategory(value: 127, xmlId: String(data: Data(base64Encoded: "SVNFTUFJTF9SRkM1MzIy")!, encoding: .utf8)!, description: String(data: Data(base64Encoded: "VGhlIGFkZHJlc3MgaXMgb25seSB2YWxpZCBhY2NvcmRpbmcgdG8gdGhlIGJyb2FkIGRlZmluaXRpb24gb2YgUkZDIDUzMjIuIEl0IGlzIG90aGVyd2lzZSBpbnZhbGlkLg==")!, encoding: .utf8)!)
		public static let err = ValidationCategory(value: 255, xmlId: String(data: Data(base64Encoded: "SVNFTUFJTF9FUlI=")!, encoding: .utf8)!, description: String(data: Data(base64Encoded: "QWRkcmVzcyBpcyBpbnZhbGlkIGZvciBhbnkgcHVycG9zZQ==")!, encoding: .utf8)!)
		
		public let value: Int
		public let xmlId: String
		public let description: String
		
		private init(value v: Int, xmlId pi: String, description d: String) {
			value = v
			xmlId = pi
			description = d
		}
		
	}
	
}


extension EmailValidator {
	
	public struct ValidationSMTPInfo : Hashable, Sendable {
		
		public static let code250215 = ValidationSMTPInfo(value: String(data: Data(base64Encoded: "Mi4xLjU=")!, encoding: .utf8)!, xmlId: String(data: Data(base64Encoded: "SVNFTUFJTF9NRVRBX1NNVFBfMjUwXzIxNQ==")!, encoding: .utf8)!, text: String(data: Data(base64Encoded: "MjUwIDIuMS41IG9r")!, encoding: .utf8)!)
		public static let code553510 = ValidationSMTPInfo(value: String(data: Data(base64Encoded: "NS4xLjA=")!, encoding: .utf8)!, xmlId: String(data: Data(base64Encoded: "SVNFTUFJTF9NRVRBX1NNVFBfNTUzXzUxMA==")!, encoding: .utf8)!, text: String(data: Data(base64Encoded: "NTUzIDUuMS4wIE90aGVyIGFkZHJlc3Mgc3RhdHVz")!, encoding: .utf8)!)
		public static let code553511 = ValidationSMTPInfo(value: String(data: Data(base64Encoded: "NS4xLjE=")!, encoding: .utf8)!, xmlId: String(data: Data(base64Encoded: "SVNFTUFJTF9NRVRBX1NNVFBfNTUzXzUxMQ==")!, encoding: .utf8)!, text: String(data: Data(base64Encoded: "NTUzIDUuMS4xIEJhZCBkZXN0aW5hdGlvbiBtYWlsYm94IGFkZHJlc3M=")!, encoding: .utf8)!)
		public static let code553512 = ValidationSMTPInfo(value: String(data: Data(base64Encoded: "NS4xLjI=")!, encoding: .utf8)!, xmlId: String(data: Data(base64Encoded: "SVNFTUFJTF9NRVRBX1NNVFBfNTUzXzUxMg==")!, encoding: .utf8)!, text: String(data: Data(base64Encoded: "NTUzIDUuMS4yIEJhZCBkZXN0aW5hdGlvbiBzeXN0ZW0gYWRkcmVzcw==")!, encoding: .utf8)!)
		public static let code553513 = ValidationSMTPInfo(value: String(data: Data(base64Encoded: "NS4xLjM=")!, encoding: .utf8)!, xmlId: String(data: Data(base64Encoded: "SVNFTUFJTF9NRVRBX1NNVFBfNTUzXzUxMw==")!, encoding: .utf8)!, text: String(data: Data(base64Encoded: "NTUzIDUuMS4zIEJhZCBkZXN0aW5hdGlvbiBtYWlsYm94IGFkZHJlc3Mgc3ludGF4")!, encoding: .utf8)!)
		
		public let value: String
		public let xmlId: String
		public let text: String
		
		private init(value v: String, xmlId pi: String, text t: String) {
			value = v
			xmlId = pi
			text = t
		}
		
	}
	
}


extension EmailValidator {
	
	public struct ValidationReference : Hashable, Sendable {
		
		public static let localPart = ValidationReference(xmlId: String(data: Data(base64Encoded: "bG9jYWwtcGFydA==")!, encoding: .utf8)!, blockQuoteName: String(data: Data(base64Encoded: "UkZDIDUzMjIgc2VjdGlvbiAzLjQuMQ==")!, encoding: .utf8)!, blockQuoteURL: URL(string: String(data: Data(base64Encoded: "aHR0cHM6Ly90b29scy5pZXRmLm9yZy9odG1sL3JmYzUzMjIjc2VjdGlvbi0zLjQuMQ==")!, encoding: .utf8)!)!, blockQuote: String(data: Data(base64Encoded: "CiAgIGxvY2FsLXBhcnQgICAgICA9ICAgZG90LWF0b20gLyBxdW90ZWQtc3RyaW5nIC8gb2JzLWxvY2FsLXBhcnQKCiAgIGRvdC1hdG9tICAgICAgICA9ICAgW0NGV1NdIGRvdC1hdG9tLXRleHQgW0NGV1NdCgogICBkb3QtYXRvbS10ZXh0ICAgPSAgIDEqYXRleHQgKigiLiIgMSphdGV4dCkKCiAgIHF1b3RlZC1zdHJpbmcgICA9ICAgW0NGV1NdCiAgICAgICAgICAgICAgICAgICAgICAgRFFVT1RFICooW0ZXU10gcWNvbnRlbnQpIFtGV1NdIERRVU9URQogICAgICAgICAgICAgICAgICAgICAgIFtDRldTXQoKICAgb2JzLWxvY2FsLXBhcnQgID0gICB3b3JkICooIi4iIHdvcmQpCgogICB3b3JkICAgICAgICAgICAgPSAgIGF0b20gLyBxdW90ZWQtc3RyaW5nCgogICBhdG9tICAgICAgICAgICAgPSAgIFtDRldTXSAxKmF0ZXh0IFtDRldTXQ==")!, encoding: .utf8)!)
		public static let localPartMaximum = ValidationReference(xmlId: String(data: Data(base64Encoded: "bG9jYWwtcGFydC1tYXhpbXVt")!, encoding: .utf8)!, blockQuoteName: String(data: Data(base64Encoded: "UkZDIDUzMjIgc2VjdGlvbiA0LjUuMy4xLjE=")!, encoding: .utf8)!, blockQuoteURL: URL(string: String(data: Data(base64Encoded: "aHR0cHM6Ly90b29scy5pZXRmLm9yZy9odG1sL3JmYzUzMjEjc2VjdGlvbi00LjUuMy4xLjE=")!, encoding: .utf8)!)!, blockQuote: String(data: Data(base64Encoded: "CiAgIFRoZSBtYXhpbXVtIHRvdGFsIGxlbmd0aCBvZiBhIHVzZXIgbmFtZSBvciBvdGhlciBsb2NhbC1wYXJ0IGlzIDY0CiAgIG9jdGV0cy4=")!, encoding: .utf8)!)
		public static let obsLocalPart = ValidationReference(xmlId: String(data: Data(base64Encoded: "b2JzLWxvY2FsLXBhcnQ=")!, encoding: .utf8)!, blockQuoteName: String(data: Data(base64Encoded: "UkZDIDUzMjIgc2VjdGlvbiAzLjQuMQ==")!, encoding: .utf8)!, blockQuoteURL: URL(string: String(data: Data(base64Encoded: "aHR0cHM6Ly90b29scy5pZXRmLm9yZy9odG1sL3JmYzUzMjIjc2VjdGlvbi0zLjQuMQ==")!, encoding: .utf8)!)!, blockQuote: String(data: Data(base64Encoded: "CiAgIG9icy1sb2NhbC1wYXJ0ICA9ICAgd29yZCAqKCIuIiB3b3JkKQoKICAgd29yZCAgICAgICAgICAgID0gICBhdG9tIC8gcXVvdGVkLXN0cmluZwoKICAgYXRvbSAgICAgICAgICAgID0gICBbQ0ZXU10gMSphdGV4dCBbQ0ZXU10KCiAgIHF1b3RlZC1zdHJpbmcgICA9ICAgW0NGV1NdCiAgICAgICAgICAgICAgICAgICAgICAgRFFVT1RFICooW0ZXU10gcWNvbnRlbnQpIFtGV1NdIERRVU9URQogICAgICAgICAgICAgICAgICAgICAgIFtDRldTXQo=")!, encoding: .utf8)!)
		public static let dotAtom = ValidationReference(xmlId: String(data: Data(base64Encoded: "ZG90LWF0b20=")!, encoding: .utf8)!, blockQuoteName: String(data: Data(base64Encoded: "UkZDIDUzMjIgc2VjdGlvbiAzLjQuMQ==")!, encoding: .utf8)!, blockQuoteURL: URL(string: String(data: Data(base64Encoded: "aHR0cHM6Ly90b29scy5pZXRmLm9yZy9odG1sL3JmYzUzMjIjc2VjdGlvbi0zLjQuMQ==")!, encoding: .utf8)!)!, blockQuote: String(data: Data(base64Encoded: "CiAgIGRvdC1hdG9tICAgICAgICA9ICAgW0NGV1NdIGRvdC1hdG9tLXRleHQgW0NGV1NdCgogICBkb3QtYXRvbS10ZXh0ICAgPSAgIDEqYXRleHQgKigiLiIgMSphdGV4dCkK")!, encoding: .utf8)!)
		public static let quotedString = ValidationReference(xmlId: String(data: Data(base64Encoded: "cXVvdGVkLXN0cmluZw==")!, encoding: .utf8)!, blockQuoteName: String(data: Data(base64Encoded: "UkZDIDUzMjIgc2VjdGlvbiAzLjQuMQ==")!, encoding: .utf8)!, blockQuoteURL: URL(string: String(data: Data(base64Encoded: "aHR0cHM6Ly90b29scy5pZXRmLm9yZy9odG1sL3JmYzUzMjIjc2VjdGlvbi0zLjQuMQ==")!, encoding: .utf8)!)!, blockQuote: String(data: Data(base64Encoded: "CiAgIHF1b3RlZC1zdHJpbmcgICA9ICAgW0NGV1NdCiAgICAgICAgICAgICAgICAgICAgICAgRFFVT1RFICooW0ZXU10gcWNvbnRlbnQpIFtGV1NdIERRVU9URQogICAgICAgICAgICAgICAgICAgICAgIFtDRldTXQoKICAgcWNvbnRlbnQgICAgICAgID0gICBxdGV4dCAvIHF1b3RlZC1wYWlyCgogICBxdGV4dCAgICAgICAgICAgPSAgICVkMzMgLyAgICAgICAgICAgICA7IFByaW50YWJsZSBVUy1BU0NJSQogICAgICAgICAgICAgICAgICAgICAgICVkMzUtOTEgLyAgICAgICAgICA7ICBjaGFyYWN0ZXJzIG5vdCBpbmNsdWRpbmcKICAgICAgICAgICAgICAgICAgICAgICAlZDkzLTEyNiAvICAgICAgICAgOyAgIlwiIG9yIHRoZSBxdW90ZSBjaGFyYWN0ZXIKICAgICAgICAgICAgICAgICAgICAgICBvYnMtcXRleHQKCiAgIHF1b3RlZC1wYWlyICAgICA9ICAgKCJcIiAoVkNIQVIgLyBXU1ApKSAvIG9icy1xcAo=")!, encoding: .utf8)!)
		public static let cfwsNearAt = ValidationReference(xmlId: String(data: Data(base64Encoded: "Q0ZXUy1uZWFyLWF0")!, encoding: .utf8)!, blockQuoteName: String(data: Data(base64Encoded: "UkZDIDUzMjIgc2VjdGlvbiAzLjQuMQ==")!, encoding: .utf8)!, blockQuoteURL: URL(string: String(data: Data(base64Encoded: "aHR0cHM6Ly90b29scy5pZXRmLm9yZy9odG1sL3JmYzUzMjIjc2VjdGlvbi0zLjQuMQ==")!, encoding: .utf8)!)!, blockQuote: String(data: Data(base64Encoded: "CiAgIENvbW1lbnRzIGFuZCBmb2xkaW5nIHdoaXRlIHNwYWNlCiAgIFNIT1VMRCBOT1QgYmUgdXNlZCBhcm91bmQgdGhlICJAIiBpbiB0aGUgYWRkci1zcGVjLgo=")!, encoding: .utf8)!)
		public static let shouldNot = ValidationReference(xmlId: String(data: Data(base64Encoded: "U0hPVUxELU5PVA==")!, encoding: .utf8)!, blockQuoteName: String(data: Data(base64Encoded: "UkZDIDIxMTkgc2VjdGlvbiA0")!, encoding: .utf8)!, blockQuoteURL: URL(string: String(data: Data(base64Encoded: "aHR0cHM6Ly90b29scy5pZXRmLm9yZy9odG1sL3JmYzIxMTk=")!, encoding: .utf8)!)!, blockQuote: String(data: Data(base64Encoded: "CiA0LiBTSE9VTEQgTk9UICAgVGhpcyBwaHJhc2UsIG9yIHRoZSBwaHJhc2UgIk5PVCBSRUNPTU1FTkRFRCIgbWVhbiB0aGF0CiAgICB0aGVyZSBtYXkgZXhpc3QgdmFsaWQgcmVhc29ucyBpbiBwYXJ0aWN1bGFyIGNpcmN1bXN0YW5jZXMgd2hlbiB0aGUKICAgIHBhcnRpY3VsYXIgYmVoYXZpb3IgaXMgYWNjZXB0YWJsZSBvciBldmVuIHVzZWZ1bCwgYnV0IHRoZSBmdWxsCiAgICBpbXBsaWNhdGlvbnMgc2hvdWxkIGJlIHVuZGVyc3Rvb2QgYW5kIHRoZSBjYXNlIGNhcmVmdWxseSB3ZWlnaGVkCiAgICBiZWZvcmUgaW1wbGVtZW50aW5nIGFueSBiZWhhdmlvciBkZXNjcmliZWQgd2l0aCB0aGlzIGxhYmVsLgo=")!, encoding: .utf8)!)
		public static let atext = ValidationReference(xmlId: String(data: Data(base64Encoded: "YXRleHQ=")!, encoding: .utf8)!, blockQuoteName: String(data: Data(base64Encoded: "UkZDIDUzMjIgc2VjdGlvbiAzLjIuMw==")!, encoding: .utf8)!, blockQuoteURL: URL(string: String(data: Data(base64Encoded: "aHR0cHM6Ly90b29scy5pZXRmLm9yZy9odG1sL3JmYzUzMjIjc2VjdGlvbi0zLjIuMw==")!, encoding: .utf8)!)!, blockQuote: String(data: Data(base64Encoded: "CiAgICBhdGV4dCAgICAgICAgICAgPSAgIEFMUEhBIC8gRElHSVQgLyAgICA7IFByaW50YWJsZSBVUy1BU0NJSQogICAgICAgICAgICAgICAgICAgICAgICAiISIgLyAiIyIgLyAgICAgICAgOyAgY2hhcmFjdGVycyBub3QgaW5jbHVkaW5nCiAgICAgICAgICAgICAgICAgICAgICAgICIkIiAvICIlIiAvICAgICAgICA7ICBzcGVjaWFscy4gIFVzZWQgZm9yIGF0b21zLgogICAgICAgICAgICAgICAgICAgICAgICAiJiIgLyAiJyIgLwogICAgICAgICAgICAgICAgICAgICAgICAiKiIgLyAiKyIgLwogICAgICAgICAgICAgICAgICAgICAgICAiLSIgLyAiLyIgLwogICAgICAgICAgICAgICAgICAgICAgICAiPSIgLyAiPyIgLwogICAgICAgICAgICAgICAgICAgICAgICAiXiIgLyAiXyIgLwogICAgICAgICAgICAgICAgICAgICAgICAiYCIgLyAieyIgLwogICAgICAgICAgICAgICAgICAgICAgICAifCIgLyAifSIgLwogICAgICAgICAgICAgICAgICAgICAgICAifiIK")!, encoding: .utf8)!)
		public static let obsDomain = ValidationReference(xmlId: String(data: Data(base64Encoded: "b2JzLWRvbWFpbg==")!, encoding: .utf8)!, blockQuoteName: String(data: Data(base64Encoded: "UkZDIDUzMjIgc2VjdGlvbiAzLjQuMQ==")!, encoding: .utf8)!, blockQuoteURL: URL(string: String(data: Data(base64Encoded: "aHR0cHM6Ly90b29scy5pZXRmLm9yZy9odG1sL3JmYzUzMjIjc2VjdGlvbi0zLjQuMQ==")!, encoding: .utf8)!)!, blockQuote: String(data: Data(base64Encoded: "CiAgIG9icy1kb21haW4gICAgICA9ICAgYXRvbSAqKCIuIiBhdG9tKQoKICAgYXRvbSAgICAgICAgICAgID0gICBbQ0ZXU10gMSphdGV4dCBbQ0ZXU10K")!, encoding: .utf8)!)
		public static let domainRfc5322 = ValidationReference(xmlId: String(data: Data(base64Encoded: "ZG9tYWluLVJGQzUzMjI=")!, encoding: .utf8)!, blockQuoteName: String(data: Data(base64Encoded: "UkZDIDUzMjIgc2VjdGlvbiAzLjQuMQ==")!, encoding: .utf8)!, blockQuoteURL: URL(string: String(data: Data(base64Encoded: "aHR0cHM6Ly90b29scy5pZXRmLm9yZy9odG1sL3JmYzUzMjIjc2VjdGlvbi0zLjQuMQ==")!, encoding: .utf8)!)!, blockQuote: String(data: Data(base64Encoded: "CiAgIGRvbWFpbiAgICAgICAgICA9ICAgZG90LWF0b20gLyBkb21haW4tbGl0ZXJhbCAvIG9icy1kb21haW4KCiAgIGRvdC1hdG9tICAgICAgICA9ICAgW0NGV1NdIGRvdC1hdG9tLXRleHQgW0NGV1NdCgogICBkb3QtYXRvbS10ZXh0ICAgPSAgIDEqYXRleHQgKigiLiIgMSphdGV4dCkK")!, encoding: .utf8)!)
		public static let domainRfc5321 = ValidationReference(xmlId: String(data: Data(base64Encoded: "ZG9tYWluLVJGQzUzMjE=")!, encoding: .utf8)!, blockQuoteName: String(data: Data(base64Encoded: "UkZDIDUzMjEgc2VjdGlvbiA0LjEuMg==")!, encoding: .utf8)!, blockQuoteURL: URL(string: String(data: Data(base64Encoded: "aHR0cHM6Ly90b29scy5pZXRmLm9yZy9odG1sL3JmYzUzMjEjc2VjdGlvbi00LjEuMg==")!, encoding: .utf8)!)!, blockQuote: String(data: Data(base64Encoded: "CiAgIERvbWFpbiAgICAgICAgID0gc3ViLWRvbWFpbiAqKCIuIiBzdWItZG9tYWluKQo=")!, encoding: .utf8)!)
		public static let subDomain = ValidationReference(xmlId: String(data: Data(base64Encoded: "c3ViLWRvbWFpbg==")!, encoding: .utf8)!, blockQuoteName: String(data: Data(base64Encoded: "UkZDIDUzMjEgc2VjdGlvbiA0LjEuMg==")!, encoding: .utf8)!, blockQuoteURL: URL(string: String(data: Data(base64Encoded: "aHR0cHM6Ly90b29scy5pZXRmLm9yZy9odG1sL3JmYzUzMjEjc2VjdGlvbi00LjEuMg==")!, encoding: .utf8)!)!, blockQuote: String(data: Data(base64Encoded: "CiAgIERvbWFpbiAgICAgICAgID0gc3ViLWRvbWFpbiAqKCIuIiBzdWItZG9tYWluKQoKICAgTGV0LWRpZyAgICAgICAgPSBBTFBIQSAvIERJR0lUCgogICBMZGgtc3RyICAgICAgICA9ICooIEFMUEhBIC8gRElHSVQgLyAiLSIgKSBMZXQtZGlnCg==")!, encoding: .utf8)!)
		public static let label = ValidationReference(xmlId: String(data: Data(base64Encoded: "bGFiZWw=")!, encoding: .utf8)!, blockQuoteName: String(data: Data(base64Encoded: "UkZDIDUzMjEgc2VjdGlvbiA0LjEuMg==")!, encoding: .utf8)!, blockQuoteURL: URL(string: String(data: Data(base64Encoded: "aHR0cHM6Ly90b29scy5pZXRmLm9yZy9odG1sL3JmYzEwMzUjc2VjdGlvbi0yLjMuNA==")!, encoding: .utf8)!)!, blockQuote: String(data: Data(base64Encoded: "CiAgIGxhYmVscyAgICAgICAgICA2MyBvY3RldHMgb3IgbGVzcwo=")!, encoding: .utf8)!)
		public static let crlf = ValidationReference(xmlId: String(data: Data(base64Encoded: "Q1JMRg==")!, encoding: .utf8)!, blockQuoteName: String(data: Data(base64Encoded: "UkZDIDUyMzQgc2VjdGlvbiAyLjM=")!, encoding: .utf8)!, blockQuoteURL: URL(string: String(data: Data(base64Encoded: "aHR0cHM6Ly90b29scy5pZXRmLm9yZy9odG1sL3JmYzUyMzQjc2VjdGlvbi0yLjM=")!, encoding: .utf8)!)!, blockQuote: String(data: Data(base64Encoded: "CiAgIENSTEYgICAgICAgID0gICVkMTMuMTAK")!, encoding: .utf8)!)
		public static let cfws = ValidationReference(xmlId: String(data: Data(base64Encoded: "Q0ZXUw==")!, encoding: .utf8)!, blockQuoteName: String(data: Data(base64Encoded: "UkZDIDUzMjIgc2VjdGlvbiAzLjIuMg==")!, encoding: .utf8)!, blockQuoteURL: URL(string: String(data: Data(base64Encoded: "aHR0cHM6Ly90b29scy5pZXRmLm9yZy9odG1sL3JmYzUzMjIjc2VjdGlvbi0zLjIuMg==")!, encoding: .utf8)!)!, blockQuote: String(data: Data(base64Encoded: "CiAgIENGV1MgICAgICAgICAgICA9ICAgKDEqKFtGV1NdIGNvbW1lbnQpIFtGV1NdKSAvIEZXUwoKICAgRldTICAgICAgICAgICAgID0gICAoWypXU1AgQ1JMRl0gMSpXU1ApIC8gIG9icy1GV1MKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgOyBGb2xkaW5nIHdoaXRlIHNwYWNlCgogICBjb21tZW50ICAgICAgICAgPSAgICIoIiAqKFtGV1NdIGNjb250ZW50KSBbRldTXSAiKSIKCiAgIGNjb250ZW50ICAgICAgICA9ICAgY3RleHQgLyBxdW90ZWQtcGFpciAvIGNvbW1lbnQKCiAgIGN0ZXh0ICAgICAgICAgICA9ICAgJWQzMy0zOSAvICAgICAgICAgIDsgUHJpbnRhYmxlIFVTLUFTQ0lJCiAgICAgICAgICAgICAgICAgICAgICAgJWQ0Mi05MSAvICAgICAgICAgIDsgIGNoYXJhY3RlcnMgbm90IGluY2x1ZGluZwogICAgICAgICAgICAgICAgICAgICAgICVkOTMtMTI2IC8gICAgICAgICA7ICAiKCIsICIpIiwgb3IgIlwiCiAgICAgICAgICAgICAgICAgICAgICAgb2JzLWN0ZXh0Cg==")!, encoding: .utf8)!)
		public static let domainLiteral = ValidationReference(xmlId: String(data: Data(base64Encoded: "ZG9tYWluLWxpdGVyYWw=")!, encoding: .utf8)!, blockQuoteName: String(data: Data(base64Encoded: "UkZDIDUzMjIgc2VjdGlvbiAzLjQuMQ==")!, encoding: .utf8)!, blockQuoteURL: URL(string: String(data: Data(base64Encoded: "aHR0cHM6Ly90b29scy5pZXRmLm9yZy9odG1sL3JmYzUzMjIjc2VjdGlvbi0zLjQuMQ==")!, encoding: .utf8)!)!, blockQuote: String(data: Data(base64Encoded: "CiAgIGRvbWFpbi1saXRlcmFsICA9ICAgW0NGV1NdICJbIiAqKFtGV1NdIGR0ZXh0KSBbRldTXSAiXSIgW0NGV1NdCg==")!, encoding: .utf8)!)
		public static let addressLiteral = ValidationReference(xmlId: String(data: Data(base64Encoded: "YWRkcmVzcy1saXRlcmFs")!, encoding: .utf8)!, blockQuoteName: String(data: Data(base64Encoded: "UkZDIDUzMjEgc2VjdGlvbiA0LjEuMg==")!, encoding: .utf8)!, blockQuoteURL: URL(string: String(data: Data(base64Encoded: "aHR0cHM6Ly90b29scy5pZXRmLm9yZy9odG1sL3JmYzUzMjEjc2VjdGlvbi00LjEuMg==")!, encoding: .utf8)!)!, blockQuote: String(data: Data(base64Encoded: "CiAgIGFkZHJlc3MtbGl0ZXJhbCAgPSAiWyIgKCBJUHY0LWFkZHJlc3MtbGl0ZXJhbCAvCiAgICAgICAgICAgICAgICAgICAgSVB2Ni1hZGRyZXNzLWxpdGVyYWwgLwogICAgICAgICAgICAgICAgICAgIEdlbmVyYWwtYWRkcmVzcy1saXRlcmFsICkgIl0iCg==")!, encoding: .utf8)!)
		public static let addressLiteralIpv4 = ValidationReference(xmlId: String(data: Data(base64Encoded: "YWRkcmVzcy1saXRlcmFsLUlQdjQ=")!, encoding: .utf8)!, blockQuoteName: String(data: Data(base64Encoded: "UkZDIDUzMjEgc2VjdGlvbiA0LjEuMw==")!, encoding: .utf8)!, blockQuoteURL: URL(string: String(data: Data(base64Encoded: "aHR0cHM6Ly90b29scy5pZXRmLm9yZy9odG1sL3JmYzUzMjEjc2VjdGlvbi00LjEuMw==")!, encoding: .utf8)!)!, blockQuote: String(data: Data(base64Encoded: "CiAgIElQdjQtYWRkcmVzcy1saXRlcmFsICA9IFNudW0gMygiLiIgIFNudW0pCgogICBTbnVtICAgICAgICAgICA9IDEqM0RJR0lUCiAgICAgICAgICAgICAgICAgIDsgcmVwcmVzZW50aW5nIGEgZGVjaW1hbCBpbnRlZ2VyCiAgICAgICAgICAgICAgICAgIDsgdmFsdWUgaW4gdGhlIHJhbmdlIDAgdGhyb3VnaCAyNTUK")!, encoding: .utf8)!)
		public static let addressLiteralIpv6 = ValidationReference(xmlId: String(data: Data(base64Encoded: "YWRkcmVzcy1saXRlcmFsLUlQdjY=")!, encoding: .utf8)!, blockQuoteName: String(data: Data(base64Encoded: "UkZDIDUzMjEgc2VjdGlvbiA0LjEuMw==")!, encoding: .utf8)!, blockQuoteURL: URL(string: String(data: Data(base64Encoded: "aHR0cHM6Ly90b29scy5pZXRmLm9yZy9odG1sL3JmYzUzMjEjc2VjdGlvbi00LjEuMw==")!, encoding: .utf8)!)!, blockQuote: String(data: Data(base64Encoded: "CiAgIElQdjYtYWRkcmVzcy1saXRlcmFsICA9ICJJUHY2OiIgSVB2Ni1hZGRyCgogICBJUHY2LWFkZHIgICAgICA9IElQdjYtZnVsbCAvIElQdjYtY29tcCAvIElQdjZ2NC1mdWxsIC8gSVB2NnY0LWNvbXAKCiAgIElQdjYtaGV4ICAgICAgID0gMSo0SEVYRElHCgogICBJUHY2LWZ1bGwgICAgICA9IElQdjYtaGV4IDcoIjoiIElQdjYtaGV4KQoKICAgSVB2Ni1jb21wICAgICAgPSBbSVB2Ni1oZXggKjUoIjoiIElQdjYtaGV4KV0gIjo6IgogICAgICAgICAgICAgICAgICBbSVB2Ni1oZXggKjUoIjoiIElQdjYtaGV4KV0KICAgICAgICAgICAgICAgICAgOyBUaGUgIjo6IiByZXByZXNlbnRzIGF0IGxlYXN0IDIgMTYtYml0IGdyb3VwcyBvZgogICAgICAgICAgICAgICAgICA7IHplcm9zLiAgTm8gbW9yZSB0aGFuIDYgZ3JvdXBzIGluIGFkZGl0aW9uIHRvIHRoZQogICAgICAgICAgICAgICAgICA7ICI6OiIgbWF5IGJlIHByZXNlbnQuCgogICBJUHY2djQtZnVsbCAgICA9IElQdjYtaGV4IDUoIjoiIElQdjYtaGV4KSAiOiIgSVB2NC1hZGRyZXNzLWxpdGVyYWwKCiAgIElQdjZ2NC1jb21wICAgID0gW0lQdjYtaGV4ICozKCI6IiBJUHY2LWhleCldICI6OiIKICAgICAgICAgICAgICAgICAgW0lQdjYtaGV4ICozKCI6IiBJUHY2LWhleCkgIjoiXQogICAgICAgICAgICAgICAgICBJUHY0LWFkZHJlc3MtbGl0ZXJhbAogICAgICAgICAgICAgICAgICA7IFRoZSAiOjoiIHJlcHJlc2VudHMgYXQgbGVhc3QgMiAxNi1iaXQgZ3JvdXBzIG9mCiAgICAgICAgICAgICAgICAgIDsgemVyb3MuICBObyBtb3JlIHRoYW4gNCBncm91cHMgaW4gYWRkaXRpb24gdG8gdGhlCiAgICAgICAgICAgICAgICAgIDsgIjo6IiBhbmQgSVB2NC1hZGRyZXNzLWxpdGVyYWwgbWF5IGJlIHByZXNlbnQuCg==")!, encoding: .utf8)!)
		public static let dtext = ValidationReference(xmlId: String(data: Data(base64Encoded: "ZHRleHQ=")!, encoding: .utf8)!, blockQuoteName: String(data: Data(base64Encoded: "UkZDIDUzMjIgc2VjdGlvbiAzLjQuMQ==")!, encoding: .utf8)!, blockQuoteURL: URL(string: String(data: Data(base64Encoded: "aHR0cHM6Ly90b29scy5pZXRmLm9yZy9odG1sL3JmYzUzMjIjc2VjdGlvbi0zLjQuMQ==")!, encoding: .utf8)!)!, blockQuote: String(data: Data(base64Encoded: "CiAgIGR0ZXh0ICAgICAgICAgICA9ICAgJWQzMy05MCAvICAgICAgICAgIDsgUHJpbnRhYmxlIFVTLUFTQ0lJCiAgICAgICAgICAgICAgICAgICAgICAgJWQ5NC0xMjYgLyAgICAgICAgIDsgIGNoYXJhY3RlcnMgbm90IGluY2x1ZGluZwogICAgICAgICAgICAgICAgICAgICAgIG9icy1kdGV4dCAgICAgICAgICA7ICAiWyIsICJdIiwgb3IgIlwiCg==")!, encoding: .utf8)!)
		public static let obsDtext = ValidationReference(xmlId: String(data: Data(base64Encoded: "b2JzLWR0ZXh0")!, encoding: .utf8)!, blockQuoteName: String(data: Data(base64Encoded: "UkZDIDUzMjIgc2VjdGlvbiAzLjQuMQ==")!, encoding: .utf8)!, blockQuoteURL: URL(string: String(data: Data(base64Encoded: "aHR0cHM6Ly90b29scy5pZXRmLm9yZy9odG1sL3JmYzUzMjIjc2VjdGlvbi0zLjQuMQ==")!, encoding: .utf8)!)!, blockQuote: String(data: Data(base64Encoded: "CiAgIG9icy1kdGV4dCAgICAgICA9ICAgb2JzLU5PLVdTLUNUTCAvIHF1b3RlZC1wYWlyCgogICBvYnMtTk8tV1MtQ1RMICAgPSAgICVkMS04IC8gICAgICAgICAgICA7IFVTLUFTQ0lJIGNvbnRyb2wKICAgICAgICAgICAgICAgICAgICAgICAlZDExIC8gICAgICAgICAgICAgOyAgY2hhcmFjdGVycyB0aGF0IGRvIG5vdAogICAgICAgICAgICAgICAgICAgICAgICVkMTIgLyAgICAgICAgICAgICA7ICBpbmNsdWRlIHRoZSBjYXJyaWFnZQogICAgICAgICAgICAgICAgICAgICAgICVkMTQtMzEgLyAgICAgICAgICA7ICByZXR1cm4sIGxpbmUgZmVlZCwgYW5kCiAgICAgICAgICAgICAgICAgICAgICAgJWQxMjcgICAgICAgICAgICAgIDsgIHdoaXRlIHNwYWNlIGNoYXJhY3RlcnMK")!, encoding: .utf8)!)
		public static let qtext = ValidationReference(xmlId: String(data: Data(base64Encoded: "cXRleHQ=")!, encoding: .utf8)!, blockQuoteName: String(data: Data(base64Encoded: "UkZDIDUzMjIgc2VjdGlvbiAzLjIuNA==")!, encoding: .utf8)!, blockQuoteURL: URL(string: String(data: Data(base64Encoded: "aHR0cHM6Ly90b29scy5pZXRmLm9yZy9odG1sL3JmYzUzMjIjc2VjdGlvbi0zLjIuNA==")!, encoding: .utf8)!)!, blockQuote: String(data: Data(base64Encoded: "CiAgIHF0ZXh0ICAgICAgICAgICA9ICAgJWQzMyAvICAgICAgICAgICAgIDsgUHJpbnRhYmxlIFVTLUFTQ0lJCiAgICAgICAgICAgICAgICAgICAgICAgJWQzNS05MSAvICAgICAgICAgIDsgIGNoYXJhY3RlcnMgbm90IGluY2x1ZGluZwogICAgICAgICAgICAgICAgICAgICAgICVkOTMtMTI2IC8gICAgICAgICA7ICAiXCIgb3IgdGhlIHF1b3RlIGNoYXJhY3RlcgogICAgICAgICAgICAgICAgICAgICAgIG9icy1xdGV4dAo=")!, encoding: .utf8)!)
		public static let obsQtext = ValidationReference(xmlId: String(data: Data(base64Encoded: "b2JzLXF0ZXh0")!, encoding: .utf8)!, blockQuoteName: String(data: Data(base64Encoded: "UkZDIDUzMjIgc2VjdGlvbiA0LjE=")!, encoding: .utf8)!, blockQuoteURL: URL(string: String(data: Data(base64Encoded: "aHR0cHM6Ly90b29scy5pZXRmLm9yZy9odG1sL3JmYzUzMjIjc2VjdGlvbi00LjE=")!, encoding: .utf8)!)!, blockQuote: String(data: Data(base64Encoded: "CiAgIG9icy1xdGV4dCAgICAgICA9ICAgb2JzLU5PLVdTLUNUTAoKICAgb2JzLU5PLVdTLUNUTCAgID0gICAlZDEtOCAvICAgICAgICAgICAgOyBVUy1BU0NJSSBjb250cm9sCiAgICAgICAgICAgICAgICAgICAgICAgJWQxMSAvICAgICAgICAgICAgIDsgIGNoYXJhY3RlcnMgdGhhdCBkbyBub3QKICAgICAgICAgICAgICAgICAgICAgICAlZDEyIC8gICAgICAgICAgICAgOyAgaW5jbHVkZSB0aGUgY2FycmlhZ2UKICAgICAgICAgICAgICAgICAgICAgICAlZDE0LTMxIC8gICAgICAgICAgOyAgcmV0dXJuLCBsaW5lIGZlZWQsIGFuZAogICAgICAgICAgICAgICAgICAgICAgICVkMTI3ICAgICAgICAgICAgICA7ICB3aGl0ZSBzcGFjZSBjaGFyYWN0ZXJzCg==")!, encoding: .utf8)!)
		public static let ctext = ValidationReference(xmlId: String(data: Data(base64Encoded: "Y3RleHQ=")!, encoding: .utf8)!, blockQuoteName: String(data: Data(base64Encoded: "UkZDIDUzMjIgc2VjdGlvbiAzLjIuMw==")!, encoding: .utf8)!, blockQuoteURL: URL(string: String(data: Data(base64Encoded: "aHR0cHM6Ly90b29scy5pZXRmLm9yZy9odG1sL3JmYzUzMjIjc2VjdGlvbi0zLjIuMw==")!, encoding: .utf8)!)!, blockQuote: String(data: Data(base64Encoded: "CiAgIGN0ZXh0ICAgICAgICAgICA9ICAgJWQzMy0zOSAvICAgICAgICAgIDsgUHJpbnRhYmxlIFVTLUFTQ0lJCiAgICAgICAgICAgICAgICAgICAgICAgJWQ0Mi05MSAvICAgICAgICAgIDsgIGNoYXJhY3RlcnMgbm90IGluY2x1ZGluZwogICAgICAgICAgICAgICAgICAgICAgICVkOTMtMTI2IC8gICAgICAgICA7ICAiKCIsICIpIiwgb3IgIlwiCiAgICAgICAgICAgICAgICAgICAgICAgb2JzLWN0ZXh0Cg==")!, encoding: .utf8)!)
		public static let obsCtext = ValidationReference(xmlId: String(data: Data(base64Encoded: "b2JzLWN0ZXh0")!, encoding: .utf8)!, blockQuoteName: String(data: Data(base64Encoded: "UkZDIDUzMjIgc2VjdGlvbiA0LjE=")!, encoding: .utf8)!, blockQuoteURL: URL(string: String(data: Data(base64Encoded: "aHR0cHM6Ly90b29scy5pZXRmLm9yZy9odG1sL3JmYzUzMjIjc2VjdGlvbi00LjE=")!, encoding: .utf8)!)!, blockQuote: String(data: Data(base64Encoded: "CiAgIG9icy1xdGV4dCAgICAgICA9ICAgb2JzLU5PLVdTLUNUTAoKICAgb2JzLU5PLVdTLUNUTCAgID0gICAlZDEtOCAvICAgICAgICAgICAgOyBVUy1BU0NJSSBjb250cm9sCiAgICAgICAgICAgICAgICAgICAgICAgJWQxMSAvICAgICAgICAgICAgIDsgIGNoYXJhY3RlcnMgdGhhdCBkbyBub3QKICAgICAgICAgICAgICAgICAgICAgICAlZDEyIC8gICAgICAgICAgICAgOyAgaW5jbHVkZSB0aGUgY2FycmlhZ2UKICAgICAgICAgICAgICAgICAgICAgICAlZDE0LTMxIC8gICAgICAgICAgOyAgcmV0dXJuLCBsaW5lIGZlZWQsIGFuZAogICAgICAgICAgICAgICAgICAgICAgICVkMTI3ICAgICAgICAgICAgICA7ICB3aGl0ZSBzcGFjZSBjaGFyYWN0ZXJzCg==")!, encoding: .utf8)!)
		public static let quotedPair = ValidationReference(xmlId: String(data: Data(base64Encoded: "cXVvdGVkLXBhaXI=")!, encoding: .utf8)!, blockQuoteName: String(data: Data(base64Encoded: "UkZDIDUzMjIgc2VjdGlvbiAzLjIuMQ==")!, encoding: .utf8)!, blockQuoteURL: URL(string: String(data: Data(base64Encoded: "aHR0cHM6Ly90b29scy5pZXRmLm9yZy9odG1sL3JmYzUzMjIjc2VjdGlvbi0zLjIuMQ==")!, encoding: .utf8)!)!, blockQuote: String(data: Data(base64Encoded: "CiAgIHF1b3RlZC1wYWlyICAgICA9ICAgKCJcIiAoVkNIQVIgLyBXU1ApKSAvIG9icy1xcAoKICAgVkNIQVIgICAgICAgICAgID0gICVkMzMtMTI2ICAgICAgICAgICAgOyB2aXNpYmxlIChwcmludGluZykgY2hhcmFjdGVycwogICBXU1AgICAgICAgICAgICAgPSAgU1AgLyBIVEFCICAgICAgICAgICA7IHdoaXRlIHNwYWNlCg==")!, encoding: .utf8)!)
		public static let obsQp = ValidationReference(xmlId: String(data: Data(base64Encoded: "b2JzLXFw")!, encoding: .utf8)!, blockQuoteName: String(data: Data(base64Encoded: "UkZDIDUzMjIgc2VjdGlvbiA0LjE=")!, encoding: .utf8)!, blockQuoteURL: URL(string: String(data: Data(base64Encoded: "aHR0cHM6Ly90b29scy5pZXRmLm9yZy9odG1sL3JmYzUzMjIjc2VjdGlvbi00LjE=")!, encoding: .utf8)!)!, blockQuote: String(data: Data(base64Encoded: "CiAgIG9icy1xcCAgICAgICAgICA9ICAgIlwiICglZDAgLyBvYnMtTk8tV1MtQ1RMIC8gTEYgLyBDUikKCiAgIG9icy1OTy1XUy1DVEwgICA9ICAgJWQxLTggLyAgICAgICAgICAgIDsgVVMtQVNDSUkgY29udHJvbAogICAgICAgICAgICAgICAgICAgICAgICVkMTEgLyAgICAgICAgICAgICA7ICBjaGFyYWN0ZXJzIHRoYXQgZG8gbm90CiAgICAgICAgICAgICAgICAgICAgICAgJWQxMiAvICAgICAgICAgICAgIDsgIGluY2x1ZGUgdGhlIGNhcnJpYWdlCiAgICAgICAgICAgICAgICAgICAgICAgJWQxNC0zMSAvICAgICAgICAgIDsgIHJldHVybiwgbGluZSBmZWVkLCBhbmQKICAgICAgICAgICAgICAgICAgICAgICAlZDEyNyAgICAgICAgICAgICAgOyAgd2hpdGUgc3BhY2UgY2hhcmFjdGVycwo=")!, encoding: .utf8)!)
		public static let tld = ValidationReference(xmlId: String(data: Data(base64Encoded: "VExE")!, encoding: .utf8)!, blockQuoteName: String(data: Data(base64Encoded: "UkZDIDUzMjEgc2VjdGlvbiAyLjMuNQ==")!, encoding: .utf8)!, blockQuoteURL: URL(string: String(data: Data(base64Encoded: "aHR0cHM6Ly90b29scy5pZXRmLm9yZy9odG1sL3JmYzUzMjEjc2VjdGlvbi0yLjMuNQ==")!, encoding: .utf8)!)!, blockQuote: String(data: Data(base64Encoded: "CiAgIEluIHRoZSBjYXNlCiAgIG9mIGEgdG9wLWxldmVsIGRvbWFpbiB1c2VkIGJ5IGl0c2VsZiBpbiBhbiBlbWFpbCBhZGRyZXNzLCBhIHNpbmdsZQogICBzdHJpbmcgaXMgdXNlZCB3aXRob3V0IGFueSBkb3RzLiAgVGhpcyBtYWtlcyB0aGUgcmVxdWlyZW1lbnQsCiAgIGRlc2NyaWJlZCBpbiBtb3JlIGRldGFpbCBiZWxvdywgdGhhdCBvbmx5IGZ1bGx5LXF1YWxpZmllZCBkb21haW4KICAgbmFtZXMgYXBwZWFyIGluIFNNVFAgdHJhbnNhY3Rpb25zIG9uIHRoZSBwdWJsaWMgSW50ZXJuZXQsCiAgIHBhcnRpY3VsYXJseSBpbXBvcnRhbnQgd2hlcmUgdG9wLWxldmVsIGRvbWFpbnMgYXJlIGludm9sdmVkLgo=")!, encoding: .utf8)!)
		public static let tldFormat = ValidationReference(xmlId: String(data: Data(base64Encoded: "VExELWZvcm1hdA==")!, encoding: .utf8)!, blockQuoteName: String(data: Data(base64Encoded: "Sm9obiBLbGVuc2luLCBSRkMgMTEyMyBlcnJhdHVtIDEzNTM=")!, encoding: .utf8)!, blockQuoteURL: URL(string: String(data: Data(base64Encoded: "aHR0cHM6Ly93d3cucmZjLWVkaXRvci5vcmcvZXJyYXRhX3NlYXJjaC5waHA/ZWlkPTEzNTM=")!, encoding: .utf8)!)!, blockQuote: String(data: Data(base64Encoded: "CiAgIEVycmF0YSBJRCAxMDgxLCByZXBvcnRlZCAyMDA3LTExLTIwLCBpZGVudGlmaWVzIGEgcHJvYmxlbSB3aXRoIHRoZQogICBldm9sdXRpb24gb2YgbmFtaW5nIG9mIHRvcC1sZXZlbCBkb21haW5zIGFuZCB0aGUgdGV4dCBvZiBSRkMgMTEyMy4KICAgSXQgcmVhZHM6CgogICBTZWN0aW9uIDIuMSBzYXlzOgoKICAgICAgICAgICAgICAgICAgICAgICAgICAgSG93ZXZlciwgYSB2YWxpZCBob3N0IG5hbWUgY2FuIG5ldmVyCiAgIGhhdmUgdGhlIGRvdHRlZC1kZWNpbWFsIGZvcm0gIy4jLiMuIywgc2luY2UgYXQgbGVhc3QgdGhlCiAgIGhpZ2hlc3QtbGV2ZWwgY29tcG9uZW50IGxhYmVsIHdpbGwgYmUgYWxwaGFiZXRpYy4KCiAgIEl0IHNob3VsZCBzYXk6CgogICAgICAgICAgICAgICAgICAgICAgICAgICBIb3dldmVyLCBhIHZhbGlkIGhvc3QgbmFtZSBjYW4gbmV2ZXIKICAgaGF2ZSB0aGUgZG90dGVkLWRlY2ltYWwgZm9ybSAjLiMuIy4jLCBzaW5jZSBhdCBsZWFzdCB0aGUKICAgaGlnaGVzdC1sZXZlbCBjb21wb25lbnQgbGFiZWwgd2lsbCBiZSBub3QgYWxsLW51bWVyaWMuCgogICBOb3RlczoKCiAgIFJGQyAzNjk2IHNlY3Rpb24gMiBzdGF0ZXM6ICJUaGVyZSBpcyBhbiBhZGRpdGlvbmFsIHJ1bGUgdGhhdAogICBlc3NlbnRpYWxseSByZXF1aXJlcyB0aGF0IHRvcC1sZXZlbCBkb21haW4gbmFtZXMgbm90IGJlCiAgIGFsbC1udW1lcmljLiIgVGhlIGVsZXZlbiBJRE4gdGVzdCBUTERzIGNyZWF0ZWQgaW4KICAgU2VwdGVtYmVyIDIwMDcgY29udGFpbiBoeXBoZW4tbWludXMgYXMgc3BlY2lmaWVkIGluIHRoZQogICBJRE5BIFJGQ3MuCiAgIEl0IHNob3VsZCBzYXk6CgogICBIb3dldmVyLCBhIHZhbGlkIGhvc3QgbmFtZSBjYW4gbmV2ZXIgaGF2ZSB0aGUgZG90dGVkLWRlY2ltYWwKICAgZm9ybSAjLiMuIy4jLCBzaW5jZSB0aGlzIGNoYW5nZSBkb2VzIG5vdCBwZXJtaXQgdGhlIGhpZ2hlc3QtbGV2ZWwKICAgY29tcG9uZW50IGxhYmVsIHRvIHN0YXJ0IHdpdGggYSBkaWdpdCBldmVuIGlmIGl0IGlzIG5vdCBhbGwtbnVtZXJpYy4KICAgTm90ZXM6CgogICBUaGlzIGlzIGEgY29ycmVjdCBpZGVudGlmaWNhdGlvbiBvZiB0aGUgcHJvYmxlbSwgYnV0IHRoZSB3cm9uZyBmaXguCiAgIFJGQyAzNjk2LCB3aGljaCBJRCAxMDgxIGNpdGVzLCBpcyBhbiBpbmZvcm1hdGlvbmFsIGRvY3VtZW50IHRoYXQgaXMKICAgZGVsaWJlcmF0ZWx5IHJlbGF4ZWQgYWJvdXQgdGhlIGZpbmUgZGV0YWlscyBhbmQgc2F5cyBzby4gSXQgaXMgbm90CiAgIHJlbGV2YW50IHRvIGRldGVybWluYXRpb24gb2YgdGhlIHRleHQgdGhhdCBzaG91bGQgaGF2ZSBiZWVuICh3aXRoCiAgIHBlcmZlY3Qga25vd2xlZGdlIG9mIHRoZSBmdXR1cmUpIGluIDExMjMuCgogICBCYXNlZCBvbiBkaXNjdXNzaW9ucyB3aGVuIHdlIHdlcmUgZG9pbmcgUkZDIDE1OTEgYW5kIHN1YnNlcXVlbnRseSwKICAgdGhlIGV4cGVjdGF0aW9uIHRoZW4gKGFuZCBwcmVzdW1hYmx5IHdoZW4gMTEyMyB3YXMgd3JpdHRlbikgd2FzCiAgIHRoYXQgdGhlIG5hbWUgb2YgYW55IG5ldyBUTEQgd291bGQgZm9sbG93IHRoZSBydWxlcyBmb3IgdGhlCiAgIGV4aXN0aW5nIG9uZXMsIGkuZS4sIHRoYXQgdGhleSB3b3VsZCBiZSBleGFjdGx5IHR3byBvciB0aHJlZQogICBjaGFyYWN0ZXJzIGxvbmcgYW5kIGJlIGFsbC1hbHBoYWJldGljICh3aGljaCBpcyBleGFjdGx5IHdoYXQgMTEyMwogICBzYXlzKS4gVGhlIHNsaWdodGx5LW9kZCAid2lsbCBiZSIgbGFuZ3VhZ2UgaW4gMTEyMyB3YXMsIEkgYmVsaWV2ZSwKICAgYmVjYXVzZSB0aGF0IHJlc3RyaWN0aW9uIHdhcyBleHBlY3RlZCB0byBiZSBlbmZvcmNlZCBieSBJQU5BLAogICByYXRoZXIgdGhhbiBiZWluZyBhIHByb3RvY29sIGlzc3VlLiBJQ0FOTiwgd2l0aCBhIGRpZmZlcmVudCBzZXQgb2YKICAgYXNzaWdubWVudCBwb2xpY2llcywgZWZmZWN0aXZlbHkgZWxpbWluYXRlZCB0aGUgbGVuZ3RoIHJ1bGUgd2l0aAogICB0aGUgVExEcyBhbGxvY2F0ZWQgaW4gMjAwMC4gSUROQSAoUkZDIDM0OTApIHVzZXMgYSBzeW50YXggZm9yIElETnMKICAgdGhhdCByZXF1aXJlcyBlbWJlZGRlZCBoeXBoZW5zIGluIFRMRHMgaWYgdGhlcmUgd2VyZSBldmVyIHRvIGJlIGFuCiAgIGFjdHVhbCBJRE4gVExEIChoZW5jZSB0aGUgY29tbWVudCBpbiBJRCAxMDgxIGFib3V0IHRoZSBJQU5BIElETgogICB0ZXN0YmVkKS4KCiAgIFdoaWxlIHRoZSBwcm9wb3NlZCBjb3JyZWN0aW9uIGluIEVycmF0YSBJRCAxMDgxIHdvdWxkIGZpeCB0aGUKICAgcHJvYmxlbSBieSBpbXBvc2luZyB0aGUgbmFycm93ZXN0IHBvc3NpYmxlIHJlc3RyaWN0aW9uICgibm90CiAgIGFsbC1udW1lcmljIiksIHRoZSBvcmlnaW5hbCBob3N0IG5hbWUgcnVsZSBhbmQgdGhlIG9yaWdpbmFsCiAgIHN0YXRlbWVudCBpbiAxMTIzIGJvdGggYXNzdW1lIHRoZSBwb3NzaWJpbGl0eSBvZiBhIG1pbmltYWwgY2hlY2sKICAgdG8gZGlmZmVyZW50aWF0ZSBiZXR3ZWVuIGRvbWFpbiBuYW1lcyBhbmQgSVAgYWRkcmVzc2VzLCBpLmUuLAogICBjaGVja2luZyB0aGUgZmlyc3QgZGlnaXQgb25seS4gQmVjYXVzZSBJIGJlbGlldmUgdGhhdCB0aGVyZSBhcmUKICAgcHJvYmFibHkgaW1wbGVtZW50YXRpb25zIHRoYXQgZGVwZW5kIG9uIHN1Y2ggbWluaW1hbCBwYXJzaW5nIC0tc29tZQogICBwcm9iYWJseSBhbmNpZW50IGFuZCBlbWJlZGRlZC0tIGl0IHdvdWxkIGFwcGVhciB0byBiZSB3aXNlIHRvIHJlbGF4CiAgIHRoZSBydWxlIGFzIGxpdHRsZSBhcyBwb3NzaWJsZSBhbmQsIGluIHBhcnRpY3VsYXIsIHRvIHJlc3RyaWN0IHRoZQogICAibGVhZGluZyBkaWdpdCIgZXhjZXB0aW9uIHRvIGRvbWFpbnMgYmVsb3cgdGhlIHRvcC1sZXZlbCwgYXMgMTEyMwogICBlZmZlY3RpdmVseSBkb2VzLgoKICAgVGhlIHN1Z2dlc3RlZCB0ZXh0IGFib3ZlIHJlZmxlY3RzIHRoYXQgcmVhc29uaW5nLiBCZWNhdXNlIG9mIHRoZQogICBwb3NzaWJsZSBjb25zZXF1ZW5jZXMgb2YgdGhpcyBpc3N1ZSwgSSB3b3VsZCBob3BlIHRoYXQgaXQgd291bGQgYmUKICAgZGlzY3Vzc2VkIHdpdGggdGhlIHJlbGV2YW50IEROUy1yZWxhdGVkIFdHcywgdGhlIFJvb3QgU2VydmVyIEFkdmlzb3J5CiAgIENvbW1pdHRlZSAoUlNBQyksIGFuZCB3aXRoIElBTkEgZm9yIGNvbW1lbnQgYW5kIGFzIGEgaGVhZHMtdXAuIFRoaXMKICAgaXNzdWUgaXMgc3Vic3RhbnRpdmUgZW5vdWdoIHRoYXQgaXQgc2hvdWxkIHByb2JhYmx5IGJlIGRlYWx0IHdpdGggYnkKICAgYSBkb2N1bWVudCB0aGF0IGV4cGxpY2l0bHkgdXBkYXRlcyAxMTIzIGFuZCB0aGF0IGlzIHByb2Nlc3NlZCBvbiB0aGUKICAgU3RhbmRhcmRzIFRyYWNrLCBidXQgYW4gYWNjdXJhdGUgc3RhdGVtZW50IGluIHRoZSBlcnJhdGEgaXMgdGhlCiAgIG5leHQtYmVzdCBvcHRpb24gdW50aWwgdGhhdCBjYW4gYmUgZG9uZS4gSW4gdGhlIGludGVyaW0gYW5kIHdoaWxlCiAgIHRoaXMgc3VnZ2VzdGlvbiBpcyBiZWluZyBkaXNjdXNzZWQsIEVycmF0YSBJRCAxMDgxIHNob3VsZCBwcm9iYWJseQogICBiZSB0YWtlbiBvdXQgb2YgInZhbGlkYXRlZCIgc3RhdHVzLg==")!, encoding: .utf8)!)
		public static let mailboxMaximum = ValidationReference(xmlId: String(data: Data(base64Encoded: "bWFpbGJveC1tYXhpbXVt")!, encoding: .utf8)!, blockQuoteName: String(data: Data(base64Encoded: "RG9taW5pYyBTYXllcnMsIFJGQyAzNjk2IGVycmF0dW0gMTY5MA==")!, encoding: .utf8)!, blockQuoteURL: URL(string: String(data: Data(base64Encoded: "aHR0cHM6Ly93d3cucmZjLWVkaXRvci5vcmcvZXJyYXRhX3NlYXJjaC5waHA/ZWlkPTE2OTA=")!, encoding: .utf8)!)!, blockQuote: String(data: Data(base64Encoded: "CiAgIEhvd2V2ZXIsIHRoZXJlIGlzIGEgcmVzdHJpY3Rpb24gaW4gUkZDIDI4MjEgb24gdGhlIGxlbmd0aCBvZiBhbgogICBhZGRyZXNzIGluIE1BSUwgYW5kIFJDUFQgY29tbWFuZHMgb2YgMjU0IGNoYXJhY3RlcnMuICBTaW5jZSBhZGRyZXNzZXMKICAgdGhhdCBkbyBub3QgZml0IGluIHRob3NlIGZpZWxkcyBhcmUgbm90IG5vcm1hbGx5IHVzZWZ1bCwgdGhlIHVwcGVyCiAgIGxpbWl0IG9uIGFkZHJlc3MgbGVuZ3RocyBzaG91bGQgbm9ybWFsbHkgYmUgY29uc2lkZXJlZCB0byBiZSAyNTQuCg==")!, encoding: .utf8)!)
		public static let domainMaximum = ValidationReference(xmlId: String(data: Data(base64Encoded: "ZG9tYWluLW1heGltdW0=")!, encoding: .utf8)!, blockQuoteName: String(data: Data(base64Encoded: "UkZDIDUzMjEgc2VjdGlvbiA0LjUuMy4xLjI=")!, encoding: .utf8)!, blockQuoteURL: URL(string: String(data: Data(base64Encoded: "aHR0cHM6Ly90b29scy5pZXRmLm9yZy9odG1sL3JmYzEwMzUjc2VjdGlvbi00LjUuMy4xLjI=")!, encoding: .utf8)!)!, blockQuote: String(data: Data(base64Encoded: "CiAgIFRoZSBtYXhpbXVtIHRvdGFsIGxlbmd0aCBvZiBhIGRvbWFpbiBuYW1lIG9yIG51bWJlciBpcyAyNTUgb2N0ZXRzLgo=")!, encoding: .utf8)!)
		public static let mailbox = ValidationReference(xmlId: String(data: Data(base64Encoded: "bWFpbGJveA==")!, encoding: .utf8)!, blockQuoteName: String(data: Data(base64Encoded: "UkZDIDUzMjEgc2VjdGlvbiA0LjEuMg==")!, encoding: .utf8)!, blockQuoteURL: URL(string: String(data: Data(base64Encoded: "aHR0cHM6Ly90b29scy5pZXRmLm9yZy9odG1sL3JmYzUzMjEjc2VjdGlvbi00LjEuMg==")!, encoding: .utf8)!)!, blockQuote: String(data: Data(base64Encoded: "CiAgIE1haWxib3ggICAgICAgID0gTG9jYWwtcGFydCAiQCIgKCBEb21haW4gLyBhZGRyZXNzLWxpdGVyYWwgKQo=")!, encoding: .utf8)!)
		public static let addrSpec = ValidationReference(xmlId: String(data: Data(base64Encoded: "YWRkci1zcGVj")!, encoding: .utf8)!, blockQuoteName: String(data: Data(base64Encoded: "UkZDIDUzMjIgc2VjdGlvbiAzLjQuMQ==")!, encoding: .utf8)!, blockQuoteURL: URL(string: String(data: Data(base64Encoded: "aHR0cHM6Ly90b29scy5pZXRmLm9yZy9odG1sL3JmYzUzMjIjc2VjdGlvbi0zLjQuMQ==")!, encoding: .utf8)!)!, blockQuote: String(data: Data(base64Encoded: "CiAgIGFkZHItc3BlYyAgICAgICA9ICAgbG9jYWwtcGFydCAiQCIgZG9tYWluCg==")!, encoding: .utf8)!)
		
		public let xmlId: String
		
		public let blockQuoteName: String
		public let blockQuoteURL: URL
		public let blockQuote: String
		
		private init(xmlId pi: String, blockQuoteName bqn: String, blockQuoteURL bqu: URL, blockQuote bq: String) {
			xmlId = pi
			blockQuoteName = bqn
			blockQuoteURL = bqu
			blockQuote = bq
		}
		
	}
	
}


extension EmailValidator {
	
	public struct ValidationDiagnosis : Hashable, Sendable {
		
		public static let valid = ValidationDiagnosis(xmlId: String(data: Data(base64Encoded: "SVNFTUFJTF9WQUxJRA==")!, encoding: .utf8)!, value: 0, category: .validCategory, smtpInfo: .code250215, references: [], description: String(data: Data(base64Encoded: "QWRkcmVzcyBpcyB2YWxpZC4gUGxlYXNlIG5vdGUgdGhhdCB0aGlzIGRvZXMgbm90IG1lYW4gdGhlIGFkZHJlc3MgYWN0dWFsbHkgZXhpc3RzLCBub3IgZXZlbiB0aGF0IHRoZSBkb21haW4gYWN0dWFsbHkgZXhpc3RzLiBUaGlzIGFkZHJlc3MgY291bGQgYmUgaXNzdWVkIGJ5IHRoZSBkb21haW4gb3duZXIgd2l0aG91dCBicmVha2luZyB0aGUgcnVsZXMgb2YgYW55IFJGQ3Mu")!, encoding: .utf8)!)
		public static let dnswarnNoMxRecord = ValidationDiagnosis(xmlId: String(data: Data(base64Encoded: "SVNFTUFJTF9ETlNXQVJOX05PX01YX1JFQ09SRA==")!, encoding: .utf8)!, value: 5, category: .dnswarn, smtpInfo: .code250215, references: [], description: String(data: Data(base64Encoded: "Q291bGRuJ3QgZmluZCBhbiBNWCByZWNvcmQgZm9yIHRoaXMgZG9tYWluIGJ1dCBhbiBBLXJlY29yZCBkb2VzIGV4aXN0")!, encoding: .utf8)!)
		public static let dnswarnNoRecord = ValidationDiagnosis(xmlId: String(data: Data(base64Encoded: "SVNFTUFJTF9ETlNXQVJOX05PX1JFQ09SRA==")!, encoding: .utf8)!, value: 6, category: .dnswarn, smtpInfo: .code250215, references: [], description: String(data: Data(base64Encoded: "Q291bGRuJ3QgZmluZCBhbiBNWCByZWNvcmQgb3IgYW4gQS1yZWNvcmQgZm9yIHRoaXMgZG9tYWlu")!, encoding: .utf8)!)
		public static let rfc5321Tld = ValidationDiagnosis(xmlId: String(data: Data(base64Encoded: "SVNFTUFJTF9SRkM1MzIxX1RMRA==")!, encoding: .utf8)!, value: 9, category: .rfc5321, smtpInfo: .code250215, references: [.tld], description: String(data: Data(base64Encoded: "QWRkcmVzcyBpcyB2YWxpZCBidXQgYXQgYSBUb3AgTGV2ZWwgRG9tYWlu")!, encoding: .utf8)!)
		public static let rfc5321Tldnumeric = ValidationDiagnosis(xmlId: String(data: Data(base64Encoded: "SVNFTUFJTF9SRkM1MzIxX1RMRE5VTUVSSUM=")!, encoding: .utf8)!, value: 10, category: .rfc5321, smtpInfo: .code250215, references: [.tldFormat], description: String(data: Data(base64Encoded: "QWRkcmVzcyBpcyB2YWxpZCBidXQgdGhlIFRvcCBMZXZlbCBEb21haW4gYmVnaW5zIHdpdGggYSBudW1iZXI=")!, encoding: .utf8)!)
		public static let rfc5321Quotedstring = ValidationDiagnosis(xmlId: String(data: Data(base64Encoded: "SVNFTUFJTF9SRkM1MzIxX1FVT1RFRFNUUklORw==")!, encoding: .utf8)!, value: 11, category: .rfc5321, smtpInfo: .code250215, references: [.quotedString], description: String(data: Data(base64Encoded: "QWRkcmVzcyBpcyB2YWxpZCBidXQgY29udGFpbnMgYSBxdW90ZWQgc3RyaW5n")!, encoding: .utf8)!)
		public static let rfc5321Addressliteral = ValidationDiagnosis(xmlId: String(data: Data(base64Encoded: "SVNFTUFJTF9SRkM1MzIxX0FERFJFU1NMSVRFUkFM")!, encoding: .utf8)!, value: 12, category: .rfc5321, smtpInfo: .code250215, references: [.addressLiteral, .addressLiteralIpv4], description: String(data: Data(base64Encoded: "QWRkcmVzcyBpcyB2YWxpZCBidXQgYXQgYSBsaXRlcmFsIGFkZHJlc3Mgbm90IGEgZG9tYWlu")!, encoding: .utf8)!)
		public static let rfc5321Ipv6Deprecated = ValidationDiagnosis(xmlId: String(data: Data(base64Encoded: "SVNFTUFJTF9SRkM1MzIxX0lQVjZERVBSRUNBVEVE")!, encoding: .utf8)!, value: 13, category: .deprec, smtpInfo: .code250215, references: [.addressLiteralIpv6], description: String(data: Data(base64Encoded: "QWRkcmVzcyBpcyB2YWxpZCBidXQgY29udGFpbnMgYSA6OiB0aGF0IG9ubHkgZWxpZGVzIG9uZSB6ZXJvIGdyb3VwLiBBbGwgaW1wbGVtZW50YXRpb25zIG11c3QgYWNjZXB0IGFuZCBiZSBhYmxlIHRvIGhhbmRsZSBhbnkgbGVnaXRpbWF0ZSBSRkMgNDI5MSBmb3JtYXQu")!, encoding: .utf8)!)
		public static let cfwsComment = ValidationDiagnosis(xmlId: String(data: Data(base64Encoded: "SVNFTUFJTF9DRldTX0NPTU1FTlQ=")!, encoding: .utf8)!, value: 17, category: .cfws, smtpInfo: .code250215, references: [.dotAtom], description: String(data: Data(base64Encoded: "QWRkcmVzcyBjb250YWlucyBjb21tZW50cw==")!, encoding: .utf8)!)
		public static let cfwsFws = ValidationDiagnosis(xmlId: String(data: Data(base64Encoded: "SVNFTUFJTF9DRldTX0ZXUw==")!, encoding: .utf8)!, value: 18, category: .cfws, smtpInfo: .code250215, references: [.localPart], description: String(data: Data(base64Encoded: "QWRkcmVzcyBjb250YWlucyBGb2xkaW5nIFdoaXRlIFNwYWNl")!, encoding: .utf8)!)
		public static let deprecLocalpart = ValidationDiagnosis(xmlId: String(data: Data(base64Encoded: "SVNFTUFJTF9ERVBSRUNfTE9DQUxQQVJU")!, encoding: .utf8)!, value: 33, category: .deprec, smtpInfo: .code553511, references: [.obsLocalPart], description: String(data: Data(base64Encoded: "VGhlIGxvY2FsIHBhcnQgaXMgaW4gYSBkZXByZWNhdGVkIGZvcm0=")!, encoding: .utf8)!)
		public static let deprecFws = ValidationDiagnosis(xmlId: String(data: Data(base64Encoded: "SVNFTUFJTF9ERVBSRUNfRldT")!, encoding: .utf8)!, value: 34, category: .deprec, smtpInfo: .code553513, references: [.obsLocalPart, .obsDomain], description: String(data: Data(base64Encoded: "QWRkcmVzcyBjb250YWlucyBhbiBvYnNvbGV0ZSBmb3JtIG9mIEZvbGRpbmcgV2hpdGUgU3BhY2U=")!, encoding: .utf8)!)
		public static let deprecQtext = ValidationDiagnosis(xmlId: String(data: Data(base64Encoded: "SVNFTUFJTF9ERVBSRUNfUVRFWFQ=")!, encoding: .utf8)!, value: 35, category: .deprec, smtpInfo: .code553513, references: [.obsQtext], description: String(data: Data(base64Encoded: "QSBxdW90ZWQgc3RyaW5nIGNvbnRhaW5zIGEgZGVwcmVjYXRlZCBjaGFyYWN0ZXI=")!, encoding: .utf8)!)
		public static let deprecQp = ValidationDiagnosis(xmlId: String(data: Data(base64Encoded: "SVNFTUFJTF9ERVBSRUNfUVA=")!, encoding: .utf8)!, value: 36, category: .deprec, smtpInfo: .code553513, references: [.obsQp], description: String(data: Data(base64Encoded: "QSBxdW90ZWQgcGFpciBjb250YWlucyBhIGRlcHJlY2F0ZWQgY2hhcmFjdGVy")!, encoding: .utf8)!)
		public static let deprecComment = ValidationDiagnosis(xmlId: String(data: Data(base64Encoded: "SVNFTUFJTF9ERVBSRUNfQ09NTUVOVA==")!, encoding: .utf8)!, value: 37, category: .deprec, smtpInfo: .code553513, references: [.obsLocalPart, .obsDomain], description: String(data: Data(base64Encoded: "QWRkcmVzcyBjb250YWlucyBhIGNvbW1lbnQgaW4gYSBwb3NpdGlvbiB0aGF0IGlzIGRlcHJlY2F0ZWQ=")!, encoding: .utf8)!)
		public static let deprecCtext = ValidationDiagnosis(xmlId: String(data: Data(base64Encoded: "SVNFTUFJTF9ERVBSRUNfQ1RFWFQ=")!, encoding: .utf8)!, value: 38, category: .deprec, smtpInfo: .code553513, references: [.obsCtext], description: String(data: Data(base64Encoded: "QSBjb21tZW50IGNvbnRhaW5zIGEgZGVwcmVjYXRlZCBjaGFyYWN0ZXI=")!, encoding: .utf8)!)
		public static let deprecCfwsNearAt = ValidationDiagnosis(xmlId: String(data: Data(base64Encoded: "SVNFTUFJTF9ERVBSRUNfQ0ZXU19ORUFSX0FU")!, encoding: .utf8)!, value: 49, category: .deprec, smtpInfo: .code553513, references: [.cfwsNearAt, .shouldNot], description: String(data: Data(base64Encoded: "QWRkcmVzcyBjb250YWlucyBhIGNvbW1lbnQgb3IgRm9sZGluZyBXaGl0ZSBTcGFjZSBhcm91bmQgdGhlIEAgc2lnbg==")!, encoding: .utf8)!)
		public static let rfc5322Domain = ValidationDiagnosis(xmlId: String(data: Data(base64Encoded: "SVNFTUFJTF9SRkM1MzIyX0RPTUFJTg==")!, encoding: .utf8)!, value: 65, category: .rfc5322, smtpInfo: .code553512, references: [.domainRfc5322], description: String(data: Data(base64Encoded: "QWRkcmVzcyBpcyBSRkMgNTMyMiBjb21wbGlhbnQgYnV0IGNvbnRhaW5zIGRvbWFpbiBjaGFyYWN0ZXJzIHRoYXQgYXJlIG5vdCBhbGxvd2VkIGJ5IEROUw==")!, encoding: .utf8)!)
		public static let rfc5322Toolong = ValidationDiagnosis(xmlId: String(data: Data(base64Encoded: "SVNFTUFJTF9SRkM1MzIyX1RPT0xPTkc=")!, encoding: .utf8)!, value: 66, category: .rfc5322, smtpInfo: .code553513, references: [.mailboxMaximum], description: String(data: Data(base64Encoded: "QWRkcmVzcyBpcyB0b28gbG9uZw==")!, encoding: .utf8)!)
		public static let rfc5322LocalToolong = ValidationDiagnosis(xmlId: String(data: Data(base64Encoded: "SVNFTUFJTF9SRkM1MzIyX0xPQ0FMX1RPT0xPTkc=")!, encoding: .utf8)!, value: 67, category: .rfc5322, smtpInfo: .code553511, references: [.localPartMaximum], description: String(data: Data(base64Encoded: "VGhlIGxvY2FsIHBhcnQgb2YgdGhlIGFkZHJlc3MgaXMgdG9vIGxvbmc=")!, encoding: .utf8)!)
		public static let rfc5322DomainToolong = ValidationDiagnosis(xmlId: String(data: Data(base64Encoded: "SVNFTUFJTF9SRkM1MzIyX0RPTUFJTl9UT09MT05H")!, encoding: .utf8)!, value: 68, category: .rfc5322, smtpInfo: .code553512, references: [.domainMaximum], description: String(data: Data(base64Encoded: "VGhlIGRvbWFpbiBwYXJ0IGlzIHRvbyBsb25n")!, encoding: .utf8)!)
		public static let rfc5322LabelToolong = ValidationDiagnosis(xmlId: String(data: Data(base64Encoded: "SVNFTUFJTF9SRkM1MzIyX0xBQkVMX1RPT0xPTkc=")!, encoding: .utf8)!, value: 69, category: .rfc5322, smtpInfo: .code553512, references: [.label], description: String(data: Data(base64Encoded: "VGhlIGRvbWFpbiBwYXJ0IGNvbnRhaW5zIGFuIGVsZW1lbnQgdGhhdCBpcyB0b28gbG9uZw==")!, encoding: .utf8)!)
		public static let rfc5322Domainliteral = ValidationDiagnosis(xmlId: String(data: Data(base64Encoded: "SVNFTUFJTF9SRkM1MzIyX0RPTUFJTkxJVEVSQUw=")!, encoding: .utf8)!, value: 70, category: .rfc5322, smtpInfo: .code553513, references: [.domainLiteral], description: String(data: Data(base64Encoded: "VGhlIGRvbWFpbiBsaXRlcmFsIGlzIG5vdCBhIHZhbGlkIFJGQyA1MzIxIGFkZHJlc3MgbGl0ZXJhbA==")!, encoding: .utf8)!)
		public static let rfc5322DomlitObsdtext = ValidationDiagnosis(xmlId: String(data: Data(base64Encoded: "SVNFTUFJTF9SRkM1MzIyX0RPTUxJVF9PQlNEVEVYVA==")!, encoding: .utf8)!, value: 71, category: .rfc5322, smtpInfo: .code553513, references: [.obsDtext], description: String(data: Data(base64Encoded: "VGhlIGRvbWFpbiBsaXRlcmFsIGlzIG5vdCBhIHZhbGlkIFJGQyA1MzIxIGFkZHJlc3MgbGl0ZXJhbCBhbmQgaXQgY29udGFpbnMgb2Jzb2xldGUgY2hhcmFjdGVycw==")!, encoding: .utf8)!)
		public static let rfc5322Ipv6Grpcount = ValidationDiagnosis(xmlId: String(data: Data(base64Encoded: "SVNFTUFJTF9SRkM1MzIyX0lQVjZfR1JQQ09VTlQ=")!, encoding: .utf8)!, value: 72, category: .rfc5322, smtpInfo: .code553513, references: [.addressLiteralIpv6], description: String(data: Data(base64Encoded: "VGhlIElQdjYgbGl0ZXJhbCBhZGRyZXNzIGNvbnRhaW5zIHRoZSB3cm9uZyBudW1iZXIgb2YgZ3JvdXBz")!, encoding: .utf8)!)
		public static let rfc5322Ipv62X2Xcolon = ValidationDiagnosis(xmlId: String(data: Data(base64Encoded: "SVNFTUFJTF9SRkM1MzIyX0lQVjZfMlgyWENPTE9O")!, encoding: .utf8)!, value: 73, category: .rfc5322, smtpInfo: .code553513, references: [.addressLiteralIpv6], description: String(data: Data(base64Encoded: "VGhlIElQdjYgbGl0ZXJhbCBhZGRyZXNzIGNvbnRhaW5zIHRvbyBtYW55IDo6IHNlcXVlbmNlcw==")!, encoding: .utf8)!)
		public static let rfc5322Ipv6Badchar = ValidationDiagnosis(xmlId: String(data: Data(base64Encoded: "SVNFTUFJTF9SRkM1MzIyX0lQVjZfQkFEQ0hBUg==")!, encoding: .utf8)!, value: 74, category: .rfc5322, smtpInfo: .code553513, references: [.addressLiteralIpv6], description: String(data: Data(base64Encoded: "VGhlIElQdjYgYWRkcmVzcyBjb250YWlucyBhbiBpbGxlZ2FsIGdyb3VwIG9mIGNoYXJhY3RlcnM=")!, encoding: .utf8)!)
		public static let rfc5322Ipv6Maxgrps = ValidationDiagnosis(xmlId: String(data: Data(base64Encoded: "SVNFTUFJTF9SRkM1MzIyX0lQVjZfTUFYR1JQUw==")!, encoding: .utf8)!, value: 75, category: .rfc5322, smtpInfo: .code553513, references: [.addressLiteralIpv6], description: String(data: Data(base64Encoded: "VGhlIElQdjYgYWRkcmVzcyBoYXMgdG9vIG1hbnkgZ3JvdXBz")!, encoding: .utf8)!)
		public static let rfc5322Ipv6Colonstrt = ValidationDiagnosis(xmlId: String(data: Data(base64Encoded: "SVNFTUFJTF9SRkM1MzIyX0lQVjZfQ09MT05TVFJU")!, encoding: .utf8)!, value: 76, category: .rfc5322, smtpInfo: .code553513, references: [.addressLiteralIpv6], description: String(data: Data(base64Encoded: "SVB2NiBhZGRyZXNzIHN0YXJ0cyB3aXRoIGEgc2luZ2xlIGNvbG9u")!, encoding: .utf8)!)
		public static let rfc5322Ipv6Colonend = ValidationDiagnosis(xmlId: String(data: Data(base64Encoded: "SVNFTUFJTF9SRkM1MzIyX0lQVjZfQ09MT05FTkQ=")!, encoding: .utf8)!, value: 77, category: .rfc5322, smtpInfo: .code553513, references: [.addressLiteralIpv6], description: String(data: Data(base64Encoded: "SVB2NiBhZGRyZXNzIGVuZHMgd2l0aCBhIHNpbmdsZSBjb2xvbg==")!, encoding: .utf8)!)
		public static let errExpectingDtext = ValidationDiagnosis(xmlId: String(data: Data(base64Encoded: "SVNFTUFJTF9FUlJfRVhQRUNUSU5HX0RURVhU")!, encoding: .utf8)!, value: 129, category: .err, smtpInfo: .code553512, references: [.dtext], description: String(data: Data(base64Encoded: "QSBkb21haW4gbGl0ZXJhbCBjb250YWlucyBhIGNoYXJhY3RlciB0aGF0IGlzIG5vdCBhbGxvd2Vk")!, encoding: .utf8)!)
		public static let errNolocalpart = ValidationDiagnosis(xmlId: String(data: Data(base64Encoded: "SVNFTUFJTF9FUlJfTk9MT0NBTFBBUlQ=")!, encoding: .utf8)!, value: 130, category: .err, smtpInfo: .code553511, references: [.localPart], description: String(data: Data(base64Encoded: "QWRkcmVzcyBoYXMgbm8gbG9jYWwgcGFydA==")!, encoding: .utf8)!)
		public static let errNodomain = ValidationDiagnosis(xmlId: String(data: Data(base64Encoded: "SVNFTUFJTF9FUlJfTk9ET01BSU4=")!, encoding: .utf8)!, value: 131, category: .err, smtpInfo: .code553512, references: [.addrSpec, .mailbox], description: String(data: Data(base64Encoded: "QWRkcmVzcyBoYXMgbm8gZG9tYWluIHBhcnQ=")!, encoding: .utf8)!)
		public static let errConsecutivedots = ValidationDiagnosis(xmlId: String(data: Data(base64Encoded: "SVNFTUFJTF9FUlJfQ09OU0VDVVRJVkVET1RT")!, encoding: .utf8)!, value: 132, category: .err, smtpInfo: .code553511, references: [.localPart, .domainRfc5322, .domainRfc5321], description: String(data: Data(base64Encoded: "VGhlIGFkZHJlc3MgbWF5IG5vdCBjb250YWluIGNvbnNlY3V0aXZlIGRvdHM=")!, encoding: .utf8)!)
		public static let errAtextAfterCfws = ValidationDiagnosis(xmlId: String(data: Data(base64Encoded: "SVNFTUFJTF9FUlJfQVRFWFRfQUZURVJfQ0ZXUw==")!, encoding: .utf8)!, value: 133, category: .err, smtpInfo: .code553513, references: [.localPart, .domainRfc5322], description: String(data: Data(base64Encoded: "QWRkcmVzcyBjb250YWlucyB0ZXh0IGFmdGVyIGEgY29tbWVudCBvciBGb2xkaW5nIFdoaXRlIFNwYWNl")!, encoding: .utf8)!)
		public static let errAtextAfterQs = ValidationDiagnosis(xmlId: String(data: Data(base64Encoded: "SVNFTUFJTF9FUlJfQVRFWFRfQUZURVJfUVM=")!, encoding: .utf8)!, value: 134, category: .err, smtpInfo: .code553511, references: [.localPart], description: String(data: Data(base64Encoded: "QWRkcmVzcyBjb250YWlucyB0ZXh0IGFmdGVyIGEgcXVvdGVkIHN0cmluZw==")!, encoding: .utf8)!)
		public static let errAtextAfterDomlit = ValidationDiagnosis(xmlId: String(data: Data(base64Encoded: "SVNFTUFJTF9FUlJfQVRFWFRfQUZURVJfRE9NTElU")!, encoding: .utf8)!, value: 135, category: .err, smtpInfo: .code553512, references: [.domainRfc5322], description: String(data: Data(base64Encoded: "RXh0cmEgY2hhcmFjdGVycyB3ZXJlIGZvdW5kIGFmdGVyIHRoZSBlbmQgb2YgdGhlIGRvbWFpbiBsaXRlcmFs")!, encoding: .utf8)!)
		public static let errExpectingQpair = ValidationDiagnosis(xmlId: String(data: Data(base64Encoded: "SVNFTUFJTF9FUlJfRVhQRUNUSU5HX1FQQUlS")!, encoding: .utf8)!, value: 136, category: .err, smtpInfo: .code553511, references: [.quotedPair], description: String(data: Data(base64Encoded: "VGhlIGFkZHJlc3MgY29udGFpbnMgYSBjaGFyYWN0ZXIgdGhhdCBpcyBub3QgYWxsb3dlZCBpbiBhIHF1b3RlZCBwYWly")!, encoding: .utf8)!)
		public static let errExpectingAtext = ValidationDiagnosis(xmlId: String(data: Data(base64Encoded: "SVNFTUFJTF9FUlJfRVhQRUNUSU5HX0FURVhU")!, encoding: .utf8)!, value: 137, category: .err, smtpInfo: .code553511, references: [.atext], description: String(data: Data(base64Encoded: "QWRkcmVzcyBjb250YWlucyBhIGNoYXJhY3RlciB0aGF0IGlzIG5vdCBhbGxvd2Vk")!, encoding: .utf8)!)
		public static let errExpectingQtext = ValidationDiagnosis(xmlId: String(data: Data(base64Encoded: "SVNFTUFJTF9FUlJfRVhQRUNUSU5HX1FURVhU")!, encoding: .utf8)!, value: 138, category: .err, smtpInfo: .code553511, references: [.qtext], description: String(data: Data(base64Encoded: "QSBxdW90ZWQgc3RyaW5nIGNvbnRhaW5zIGEgY2hhcmFjdGVyIHRoYXQgaXMgbm90IGFsbG93ZWQ=")!, encoding: .utf8)!)
		public static let errExpectingCtext = ValidationDiagnosis(xmlId: String(data: Data(base64Encoded: "SVNFTUFJTF9FUlJfRVhQRUNUSU5HX0NURVhU")!, encoding: .utf8)!, value: 139, category: .err, smtpInfo: .code553511, references: [.qtext], description: String(data: Data(base64Encoded: "QSBjb21tZW50IGNvbnRhaW5zIGEgY2hhcmFjdGVyIHRoYXQgaXMgbm90IGFsbG93ZWQ=")!, encoding: .utf8)!)
		public static let errBackslashend = ValidationDiagnosis(xmlId: String(data: Data(base64Encoded: "SVNFTUFJTF9FUlJfQkFDS1NMQVNIRU5E")!, encoding: .utf8)!, value: 140, category: .err, smtpInfo: .code553512, references: [.domainRfc5322, .domainRfc5321, .quotedPair], description: String(data: Data(base64Encoded: "VGhlIGFkZHJlc3MgY2FuJ3QgZW5kIHdpdGggYSBiYWNrc2xhc2g=")!, encoding: .utf8)!)
		public static let errDotStart = ValidationDiagnosis(xmlId: String(data: Data(base64Encoded: "SVNFTUFJTF9FUlJfRE9UX1NUQVJU")!, encoding: .utf8)!, value: 141, category: .err, smtpInfo: .code553511, references: [.localPart, .domainRfc5322, .domainRfc5321], description: String(data: Data(base64Encoded: "TmVpdGhlciBwYXJ0IG9mIHRoZSBhZGRyZXNzIG1heSBiZWdpbiB3aXRoIGEgZG90")!, encoding: .utf8)!)
		public static let errDotEnd = ValidationDiagnosis(xmlId: String(data: Data(base64Encoded: "SVNFTUFJTF9FUlJfRE9UX0VORA==")!, encoding: .utf8)!, value: 142, category: .err, smtpInfo: .code553511, references: [.localPart, .domainRfc5322, .domainRfc5321], description: String(data: Data(base64Encoded: "TmVpdGhlciBwYXJ0IG9mIHRoZSBhZGRyZXNzIG1heSBlbmQgd2l0aCBhIGRvdA==")!, encoding: .utf8)!)
		public static let errDomainhyphenstart = ValidationDiagnosis(xmlId: String(data: Data(base64Encoded: "SVNFTUFJTF9FUlJfRE9NQUlOSFlQSEVOU1RBUlQ=")!, encoding: .utf8)!, value: 143, category: .err, smtpInfo: .code553512, references: [.subDomain], description: String(data: Data(base64Encoded: "QSBkb21haW4gb3Igc3ViZG9tYWluIGNhbm5vdCBiZWdpbiB3aXRoIGEgaHlwaGVu")!, encoding: .utf8)!)
		public static let errDomainhyphenend = ValidationDiagnosis(xmlId: String(data: Data(base64Encoded: "SVNFTUFJTF9FUlJfRE9NQUlOSFlQSEVORU5E")!, encoding: .utf8)!, value: 144, category: .err, smtpInfo: .code553512, references: [.subDomain], description: String(data: Data(base64Encoded: "QSBkb21haW4gb3Igc3ViZG9tYWluIGNhbm5vdCBlbmQgd2l0aCBhIGh5cGhlbg==")!, encoding: .utf8)!)
		public static let errUnclosedquotedstr = ValidationDiagnosis(xmlId: String(data: Data(base64Encoded: "SVNFTUFJTF9FUlJfVU5DTE9TRURRVU9URURTVFI=")!, encoding: .utf8)!, value: 145, category: .err, smtpInfo: .code553512, references: [.quotedString], description: String(data: Data(base64Encoded: "VW5jbG9zZWQgcXVvdGVkIHN0cmluZw==")!, encoding: .utf8)!)
		public static let errUnclosedcomment = ValidationDiagnosis(xmlId: String(data: Data(base64Encoded: "SVNFTUFJTF9FUlJfVU5DTE9TRURDT01NRU5U")!, encoding: .utf8)!, value: 146, category: .err, smtpInfo: .code553512, references: [.cfws], description: String(data: Data(base64Encoded: "VW5jbG9zZWQgY29tbWVudA==")!, encoding: .utf8)!)
		public static let errUncloseddomlit = ValidationDiagnosis(xmlId: String(data: Data(base64Encoded: "SVNFTUFJTF9FUlJfVU5DTE9TRURET01MSVQ=")!, encoding: .utf8)!, value: 147, category: .err, smtpInfo: .code553512, references: [.domainLiteral], description: String(data: Data(base64Encoded: "RG9tYWluIGxpdGVyYWwgaXMgbWlzc2luZyBpdHMgY2xvc2luZyBicmFja2V0")!, encoding: .utf8)!)
		public static let errFwsCrlfX2 = ValidationDiagnosis(xmlId: String(data: Data(base64Encoded: "SVNFTUFJTF9FUlJfRldTX0NSTEZfWDI=")!, encoding: .utf8)!, value: 148, category: .err, smtpInfo: .code553513, references: [.cfws], description: String(data: Data(base64Encoded: "Rm9sZGluZyBXaGl0ZSBTcGFjZSBjb250YWlucyBjb25zZWN1dGl2ZSBDUkxGIHNlcXVlbmNlcw==")!, encoding: .utf8)!)
		public static let errFwsCrlfEnd = ValidationDiagnosis(xmlId: String(data: Data(base64Encoded: "SVNFTUFJTF9FUlJfRldTX0NSTEZfRU5E")!, encoding: .utf8)!, value: 149, category: .err, smtpInfo: .code553513, references: [.cfws], description: String(data: Data(base64Encoded: "Rm9sZGluZyBXaGl0ZSBTcGFjZSBlbmRzIHdpdGggYSBDUkxGIHNlcXVlbmNl")!, encoding: .utf8)!)
		public static let errCrNoLf = ValidationDiagnosis(xmlId: String(data: Data(base64Encoded: "SVNFTUFJTF9FUlJfQ1JfTk9fTEY=")!, encoding: .utf8)!, value: 150, category: .err, smtpInfo: .code553513, references: [.cfws, .crlf], description: String(data: Data(base64Encoded: "QWRkcmVzcyBjb250YWlucyBhIGNhcnJpYWdlIHJldHVybiB0aGF0IGlzIG5vdCBmb2xsb3dlZCBieSBhIGxpbmUgZmVlZA==")!, encoding: .utf8)!)
		
		public let xmlId: String
		
		public let value: Int
		public let category: ValidationCategory
		public let smtpInfo: ValidationSMTPInfo
		public let references: [ValidationReference]
		public let description: String
		
		private init(xmlId pi: String, value v: Int, category c: ValidationCategory, smtpInfo si: ValidationSMTPInfo, references r: [ValidationReference], description d: String) {
			xmlId = pi
			value = v
			category = c
			smtpInfo = si
			references = r
			description = d
		}
		
	}
	
}
